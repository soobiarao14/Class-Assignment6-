{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNbuXRgARI7fTmYNGYWFFo2",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/soobiarao14/Class-Assignment6-/blob/main/Assignment%2000%20to%2005/02_intermediate_Control_Flow_for_Console.ipynb/Assignment%2000%20to%2005\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"handout\")\n",
        "\n",
        "\n",
        "import random\n",
        "def main():\n",
        "    print(\"\\n🎮 Welcome to the Ultimate High Low Game! 🎮\")\n",
        "    print(\"********************************************\\n\")\n",
        "\n",
        "    try:\n",
        "        total_rounds = int(input(\"How many rounds would you like to play? 🎯 \"))\n",
        "    except ValueError:\n",
        "        print(\"⚠️ Invalid input. Defaulting to 5 rounds.\")\n",
        "        total_rounds = 5\n",
        "\n",
        "    your_score = 0\n",
        "\n",
        "    for i in range(total_rounds):\n",
        "        print(f\"\\n🔵 Round {i + 1} of {total_rounds}\")\n",
        "\n",
        "        computer_number: int = random.randint(1, 100)\n",
        "        your_number: int = random.randint(1, 100)\n",
        "\n",
        "        print(f\"👉 Your number is: {your_number}\")\n",
        "\n",
        "        choice: str = input(\"Do you think your number is 'higher' or 'lower' than the computer's number? \").strip().lower()\n",
        "\n",
        "        higher_and_correct: bool = choice == \"higher\" and your_number > computer_number\n",
        "        lower_and_correct: bool = choice == \"lower\" and your_number < computer_number\n",
        "\n",
        "        if higher_and_correct or lower_and_correct:\n",
        "            print(f\"✅ Correct! The computer's number was {computer_number}.\")\n",
        "            funny_positive = random.choice([\n",
        "                \"🔥 You're on fire!\",\n",
        "                \"😎 Pro level guess!\",\n",
        "                \"🎯 Bullseye!\",\n",
        "                \"💪 Strong move!\"\n",
        "            ])\n",
        "            print(funny_positive)\n",
        "            your_score += 1\n",
        "        else:\n",
        "            print(f\"❌ Oops! The computer's number was {computer_number}.\")\n",
        "            funny_negative = random.choice([\n",
        "                \"😅 Better luck next time!\",\n",
        "                \"😂 That was a close miss!\",\n",
        "                \"🤔 Maybe trust your instincts more!\",\n",
        "                \"😬 Not quite right!\"\n",
        "            ])\n",
        "            print(funny_negative)\n",
        "\n",
        "        print(f\"🏆 Current score: {your_score}\")\n",
        "        print(\"-\" * 40)\n",
        "\n",
        "    print(\"\\n🎉 Game Over!\")\n",
        "    print(f\"Your final score: {your_score} out of {total_rounds}\")\n",
        "\n",
        "    # Grade system\n",
        "    percentage = (your_score / total_rounds) * 100\n",
        "    if percentage == 100:\n",
        "        grade = \"🏅 Legend!\"\n",
        "    elif percentage >= 80:\n",
        "        grade = \"🥇 Excellent!\"\n",
        "    elif percentage >= 60:\n",
        "        grade = \"🥈 Good Job!\"\n",
        "    elif percentage >= 40:\n",
        "        grade = \"🥉 Not Bad!\"\n",
        "    else:\n",
        "        grade = \"😢 Needs Practice.\"\n",
        "\n",
        "    print(f\"Your grade: {grade}\")\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MQ2ut-FEQGZB",
        "outputId": "2a983778-662f-4abb-9e9c-7085219fb14a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "handout\n",
            "\n",
            "🎮 Welcome to the Ultimate High Low Game! 🎮\n",
            "********************************************\n",
            "\n",
            "How many rounds would you like to play? 🎯 low\n",
            "⚠️ Invalid input. Defaulting to 5 rounds.\n",
            "\n",
            "🔵 Round 1 of 5\n",
            "👉 Your number is: 53\n",
            "Do you think your number is 'higher' or 'lower' than the computer's number? higher\n",
            "✅ Correct! The computer's number was 41.\n",
            "💪 Strong move!\n",
            "🏆 Current score: 1\n",
            "----------------------------------------\n",
            "\n",
            "🔵 Round 2 of 5\n",
            "👉 Your number is: 3\n",
            "Do you think your number is 'higher' or 'lower' than the computer's number? low\n",
            "❌ Oops! The computer's number was 34.\n",
            "😬 Not quite right!\n",
            "🏆 Current score: 1\n",
            "----------------------------------------\n",
            "\n",
            "🔵 Round 3 of 5\n",
            "👉 Your number is: 54\n",
            "Do you think your number is 'higher' or 'lower' than the computer's number? low\n",
            "❌ Oops! The computer's number was 57.\n",
            "😂 That was a close miss!\n",
            "🏆 Current score: 1\n",
            "----------------------------------------\n",
            "\n",
            "🔵 Round 4 of 5\n",
            "👉 Your number is: 42\n",
            "Do you think your number is 'higher' or 'lower' than the computer's number? higher\n",
            "❌ Oops! The computer's number was 46.\n",
            "😂 That was a close miss!\n",
            "🏆 Current score: 1\n",
            "----------------------------------------\n",
            "\n",
            "🔵 Round 5 of 5\n",
            "👉 Your number is: 14\n",
            "Do you think your number is 'higher' or 'lower' than the computer's number? lower\n",
            "✅ Correct! The computer's number was 47.\n",
            "🔥 You're on fire!\n",
            "🏆 Current score: 2\n",
            "----------------------------------------\n",
            "\n",
            "🎉 Game Over!\n",
            "Your final score: 2 out of 5\n",
            "Your grade: 🥉 Not Bad!\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Planetary Weight Calculator\")\n",
        "\n",
        "def main():\n",
        "  print(\"Welcome to the Planetary Weight Calculator\")\n",
        "  print(\"******************************************\")\n",
        "\n",
        "earth_weight = float(input(\"Enter your weight on Earth: \"))\n",
        "\n",
        "gravity_ratios = {\n",
        "    \"Mercury\":0.38,\n",
        "    \"Venus\":0.91,\n",
        "    \"Mars\":0.38,\n",
        "    \"Jupiter\":2.34,\n",
        "    \"Saturn\":1.06,\n",
        "    \"Uranus\":0.92,\n",
        "    \"Neptune\":1.19\n",
        "}\n",
        "\n",
        "print(\"\\n Select a planet\")\n",
        "for planet in gravity_ratios:\n",
        "    print(f'- {planet}')\n",
        "\n",
        "planet_choice = input(\"Enter the name of the planet: \").title()\n",
        "\n",
        "if planet_choice in gravity_ratios:\n",
        "    new_weight = earth_weight * gravity_ratios[planet_choice]\n",
        "    print(f'Your weight on {planet_choice} is {new_weight:.2f}kg')\n",
        "else:\n",
        "  print(\"Invalid planet choice\")\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "  main()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RZC3aIokiAf3",
        "outputId": "360cc5e2-fe98-4353-adb2-7cd3b56ec87d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Planetary Weight Calculator\n",
            "Enter your weight on Earth: 20\n",
            "\n",
            " Select a planet\n",
            "- Mercury\n",
            "- Venus\n",
            "- Mars\n",
            "- Jupiter\n",
            "- Saturn\n",
            "- Uranus\n",
            "- Neptune\n",
            "Enter the name of the planet: 0.91\n",
            "Invalid planet choice\n",
            "Welcome to the Planetary Weight Calculator\n",
            "******************************************\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install colorama\n",
        "from colorama import Fore, Style, init\n",
        "\n",
        "# Initialize Colorama\n",
        "init(autoreset=True)\n",
        "\n",
        "print(Fore.CYAN + \"🎮💥 Welcome to the Pakistan Cricket Team List Manipulation Game 💥🎮\")\n",
        "print(Fore.CYAN + \"***************************************************************\\n\")\n",
        "\n",
        "# Updated list with Pakistan Cricket Team\n",
        "my_list = [\"Babar Azam\", \"Shaheen Afridi\", \"Rizwan\", \"Fakhar Zaman\", \"Shadab Khan\",\n",
        "           \"Haris Rauf\", \"Imam-ul-Haq\", \"Mohammad Nawaz\", \"Mohammad Amir\", \"Asif Ali\"]\n",
        "\n",
        "def access_element(my_list, index):\n",
        "    \"\"\"Returns the element at the specified index, or an error message if out of range.\"\"\"\n",
        "    if 0 <= index < len(my_list):\n",
        "        return Fore.GREEN + f'✅ Player at index {index}: {my_list[index]}'\n",
        "    return Fore.RED + \"❌ Index out of range!\"\n",
        "\n",
        "def modify_element(my_list, index, new_value):\n",
        "    \"\"\"Modifies the element at the specified index with the new value.\"\"\"\n",
        "    if 0 <= index < len(my_list):\n",
        "        old_value = my_list[index]\n",
        "        my_list[index] = new_value\n",
        "        return Fore.YELLOW + f'🔄 Player at index {index} modified from {old_value} to {new_value}'\n",
        "    return Fore.RED + \"❌ Index out of range!\"\n",
        "\n",
        "def slice_list(my_list, start, end):\n",
        "    \"\"\"Returns a new list containing the elements from the start index to the end index (exclusive).\"\"\"\n",
        "    if 0 <= start < len(my_list) and 0 <= end <= len(my_list):\n",
        "        return Fore.CYAN + f'Sliced list: {my_list[start:end]}'\n",
        "    return Fore.RED + \"❌ Invalid slice indices!\"\n",
        "\n",
        "def list_game():\n",
        "    print(Fore.MAGENTA + \"\\n🛸 Welcome to the List Manipulation Game! 🛸\")\n",
        "\n",
        "while True:\n",
        "    print(Fore.BLUE + \"\\nCurrent Pakistan Cricket Team:\", my_list)\n",
        "\n",
        "    print(Fore.YELLOW + \"\\nSelect an operation:\")\n",
        "    print(Fore.YELLOW + \"1. Access Player\")\n",
        "    print(Fore.YELLOW + \"2. Modify Player\")\n",
        "    print(Fore.YELLOW + \"3. Slice List\")\n",
        "    print(Fore.YELLOW + \"4. Quit\")\n",
        "\n",
        "    choice = input(Fore.GREEN + \"Enter your choice (1-4): \")\n",
        "\n",
        "    if choice == \"1\":\n",
        "        index = int(input(Fore.GREEN + \"Enter the index of the player you want to access: \"))\n",
        "        print(access_element(my_list, index))\n",
        "    elif choice == \"2\":\n",
        "        index = int(input(Fore.GREEN + \"Enter the index of the player you want to modify: \"))\n",
        "        new_value = input(Fore.GREEN + \"Enter the new name for the player: \")\n",
        "        print(modify_element(my_list, index, new_value))\n",
        "    elif choice == \"3\":\n",
        "        start = int(input(Fore.GREEN + \"Enter the start index for the slice: \"))\n",
        "        end = int(input(Fore.GREEN + \"Enter the end index for the slice: \"))\n",
        "        print(slice_list(my_list, start, end))\n",
        "    elif choice == \"4\":\n",
        "        print(Fore.MAGENTA + \"🚀 Exiting the game. Thanks for playing! Goodbye! ✨\")\n",
        "        break\n",
        "    else:\n",
        "        print(Fore.RED + \"❌ Invalid choice! Please enter a number between 1 to 4.\")\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    list_game()\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "500A8187k527",
        "outputId": "b82aff19-f17d-4d63-d364-829aa767dc34"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: colorama in /usr/local/lib/python3.11/dist-packages (0.4.6)\n",
            "🎮💥 Welcome to the Pakistan Cricket Team List Manipulation Game 💥🎮\n",
            "***************************************************************\n",
            "\n",
            "\n",
            "Current Pakistan Cricket Team: ['Babar Azam', 'Shaheen Afridi', 'Rizwan', 'Fakhar Zaman', 'Shadab Khan', 'Haris Rauf', 'Imam-ul-Haq', 'Mohammad Nawaz', 'Mohammad Amir', 'Asif Ali']\n",
            "\n",
            "Select an operation:\n",
            "1. Access Player\n",
            "2. Modify Player\n",
            "3. Slice List\n",
            "4. Quit\n",
            "\u001b[32mEnter your choice (1-4): 1\n",
            "\u001b[32mEnter the index of the player you want to access: 2\n",
            "✅ Player at index 2: Rizwan\n",
            "\n",
            "Current Pakistan Cricket Team: ['Babar Azam', 'Shaheen Afridi', 'Rizwan', 'Fakhar Zaman', 'Shadab Khan', 'Haris Rauf', 'Imam-ul-Haq', 'Mohammad Nawaz', 'Mohammad Amir', 'Asif Ali']\n",
            "\n",
            "Select an operation:\n",
            "1. Access Player\n",
            "2. Modify Player\n",
            "3. Slice List\n",
            "4. Quit\n",
            "\u001b[32mEnter your choice (1-4): 3\n",
            "\u001b[32mEnter the start index for the slice: 4\n",
            "\u001b[32mEnter the end index for the slice: 3\n",
            "Sliced list: []\n",
            "\n",
            "Current Pakistan Cricket Team: ['Babar Azam', 'Shaheen Afridi', 'Rizwan', 'Fakhar Zaman', 'Shadab Khan', 'Haris Rauf', 'Imam-ul-Haq', 'Mohammad Nawaz', 'Mohammad Amir', 'Asif Ali']\n",
            "\n",
            "Select an operation:\n",
            "1. Access Player\n",
            "2. Modify Player\n",
            "3. Slice List\n",
            "4. Quit\n",
            "\u001b[32mEnter your choice (1-4): 4\n",
            "🚀 Exiting the game. Thanks for playing! Goodbye! ✨\n",
            "\n",
            "🛸 Welcome to the List Manipulation Game! 🛸\n"
          ]
        }
      ]
    }
  ]
}